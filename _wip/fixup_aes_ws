#!/bin/bash

# Apex Universal Library
# Apex Embedded Systems
#
# @file   fixup_aes_ws
# @brief  deployment
#
# "$Date: 2016-03-01 15:20:11 -0600 (Tue, 01 Mar 2016) $"


############### CUSTOMER SPECIFIC CODE REMOVAL FLAGS ####################

#REMOVE_EGS=0
REMOVE_EGS=1
REMOVE_INTERNAL=1


###################### SOURCE & DESTINATION FOLDER #########################

SRC=${PWD}/..
DST="aes_ws"

###################### COPY FOLDERS #########################

FOLDERSCOPY="demo_basic
demo_multiple_boards
demo_stx104_fast
demo_stx104_simple
Demo_GUI
drv_aul_sim
drv_aul_x86
lib_report
documentation
aul_tree"

for f in $FOLDERSCOPY
do
	echo "##==> copy folder '$f' to '$DST' target folder"
	cd $SRC/$f
	find . -depth -print | cpio -panVd ~/$DST/$f
done 


###################### REMOVE UNWANTED #########################

FOLDERSREMOVE="array
aul_lib_dll
demo
AppTestDLL
_Out_Executable_AulTest_Debug
WinDriver
test"

echo "##==> house clean target aul_tree of misc unwanted folders and files"
cd ~/$DST/aul_tree

rm -rf "./Unique IDs.ods"

for f in $FOLDERSREMOVE
do
	echo "##==> removing folder '$f' in target"
	rm -rf ./$f
done 

echo "##==> removing misc win32 related files"
rm -rf ./io/io_win32_lib_gen.c
rm -rf ./io/io_win32_lib_sim.c

echo "##==> removing misc internal GUI documentation images"
cd ~/$DST/Demo_GUI/Documentation
rm -rf *.docx
rm -rf Quick_Start*.jpg
rm -rf MainFotm.PNG
rm -rf MainForm2.PNG
rm -rf STXMainForm.PNG

echo "##==> removing unreleased components and related internal documentation"
cd ~/$DST/aul_tree/components
rm -rf ./cmp_template
rm -rf ./ltc2449_spi
rm -rf ./pdo_spi
rm -rf ./spich
rm -rf ./syscon_0x8001
rm -rf ./980061
rm -rf Component_Theory_Of_Operation.odt

echo "##==> removing unrelated projects within the workspace"
cd ~/$DST
rm -rf ./idi  


###################### REMOVE ANY CUSTOMER SPECIFIC #################
# this removes all references to any customer specific components/devices.

#TODO: pass in component name and have it do it all

echo "##==> removing private customer related information within documents and files"
if [ $REMOVE_EGS -eq 1 ]; then

  cd  ~/$DST/aul_tree/components
  rm -rf ./egs
  sed -i '/<EGS_BEGIN>/,/<EGS_END>/d' ./cmp_avail_cmd.h
  sed -i '/<EGS_BEGIN>/,/<EGS_END>/d' ./cmp_avail_module.h
  sed -i '/<EGS_BEGIN>/,/<EGS_END>/d' ./cmp_avail_status.h 
  sed -i '/<EGS_BEGIN>/,/<EGS_END>/d' ./cmp_avail.c
  sed -i '/<EGS_BEGIN>/,/<EGS_END>/d' ./cmp_avail.h
  cd ~/$DST/aul_tree/devices
  sed -i '/<EGS_BEGIN>/,/<EGS_END>/d' ./dev_avail_module.h   
  cd ~/$DST/aul_tree/devices/stx104
  sed -i '/<EGS_BEGIN>/,/<EGS_END>/d' ./dev_stx104.c
  sed -i '/<EGS_BEGIN>/,/<EGS_END>/d' ./dev_stx104.h
  cd ~/$DST/aul_tree/shared
  sed -i '/<EGS_BEGIN>/,/<EGS_END>/d' ./sysval.h 
  cd ~/$DST/aul_tree/auldrv
  sed -i '/<EGS_BEGIN>/,/<EGS_END>/d' ./auldrv.c
  cd ~/$DST/drv_aul_x86
  sed -i '/<EGS_BEGIN>/,/<EGS_END>/d' ./load
  sed -i '/<EGS_BEGIN>/,/<EGS_END>/d' ./unload
  cd ~/$DST/aul_tree/drv_aul_sim
  sed -i '/<EGS_BEGIN>/,/<EGS_END>/d' ./load
  sed -i '/<EGS_BEGIN>/,/<EGS_END>/d' ./unload
fi 

#
# http://www.cyberciti.biz/faq/bash-loop-over-file/
# http://stackoverflow.com/questions/2437452/how-to-get-the-list-of-files-in-a-directory-in-a-shell-script
#
echo "##==> removing internally related information within documents and files"

if [ $REMOVE_INTERNAL -eq 1 ]; then 
echo "##==> changing directory to: ~/${DST}/aul_tree/devices/stx104/"
  cd ~/$DST/aul_tree/devices/stx104/
echo "##==> in ${PWD##/*}"
  sed -i '/<INTERNAL_BEGIN>/,/<INTERNAL_END>/d' dev_stx104.c
  sed -i '/<INTERNAL_BEGIN>/,/<INTERNAL_END>/d' dev_stx104.h
  cd ~/$DST/drv_aul_x86
  sed -i '/<INTERNAL_BEGIN>/,/<INTERNAL_END>/d' README.txt
  cd ~/$DST/aul_tree/reg
  sed -i '/<INTERNAL_BEGIN>/,/<INTERNAL_END>/d' reg.h
  cd ~/$DST/aul_tree/components/i8254
  sed -i '/<INTERNAL_BEGIN>/,/<INTERNAL_END>/d' cmp_i8254.c
  cd ~/$DST/aul_tree/components/i8255m0
  sed -i '/<INTERNAL_BEGIN>/,/<INTERNAL_END>/d' i8255m0.c
  
  cd ~/$DST/demo_basic
  sed -i '/<INTERNAL_BEGIN>/,/<INTERNAL_END>/d' demo_basic.c
  cd ~/$DST/demo_multiple_boards
  sed -i '/<INTERNAL_BEGIN>/,/<INTERNAL_END>/d' demo_multiple_boards.c
  cd ~/$DST/demo_stx104_simple
  sed -i '/<INTERNAL_BEGIN>/,/<INTERNAL_END>/d' demo_stx104_simple.c
  cd ~/$DST/demo_stx104_fast
  sed -i '/<INTERNAL_BEGIN>/,/<INTERNAL_END>/d' demo_stx104_fast.c
  cd ~/$DST/lib_report
  sed -i '/<INTERNAL_BEGIN>/,/<INTERNAL_END>/d' lib_report.c
fi

# work in progress specific to hardware scanning.
#/*<HWSCAN_BEGIN>*/
#/*<HWSCAN_END>*/

# Documentation:  will this work with Doxygen?
#/*<INTERNAL_BEGIN>*/
#/*<INTERNAL_END>*/

###################### REMOVE ANY REMAINING DATA #########################

echo "##==> Remove all the dmesg.txt"
cd ~/$DST
find . -name "dmesg.txt" -type f -delete

echo "##==> Remove all subversion information directories"
cd ~/$DST
find . -depth -name ".svn" -exec rm -fr {} \;
#rm -rf `find . -type d -name .svn`

###################### CLEAN/REBUILD ALL EXECUTABLES #########################
# rebuild the library and demos.

#must do by openning eclipse using $DST workspace and clean/build each project

#FOLDERSCOMPILE=" 'demo_basic/_Out_Debug' 
#'demo_multiple_boards/_Out_Debug'
#'demo_stx104_fast/_Out_Debug'
#'demo_stx104_simple/_Out_Debug'
#'lib_report/_Out_Debug'
#'drv_aul_sim'
#'drv_aul_x86'
#'aul_tree/_Out_Library_Shared_Use_Driver'
#'aul_tree/_Out_Library_Shared_Use_Simulator'
#'aul_tree/_Out_Library_Static_Application_Release'
#'aul_tree/_Out_Library_Static_Application_Debug' "
#
#for f in $FOLDERSCOMPILE
#do
#	echo "##==> Make clean '$f'"
#	cd ~/$DST/$f
#	make clean
#done 


################ RE-GENERATE DOCUMENTATION USIN DOXYGEN ######################
echo "##==> Re-generating documentation"

FOLDERSDOC="demo_basic
demo_multiple_boards
demo_stx104_fast
demo_stx104_simple
lib_report"

echo "##==> remove old 'aul_tree' documentation at target"
cd ~/$DST/documentation
rm -rf ./aul_tree
echo "##==> build new 'aul_tree' documentation at target"
#mkdir ~/$DST/documentation/aul_tree
cd ~/$DST/aul_tree/_Documentation_Source
doxygen aul_documentation.doxyfile	
	
for f in $FOLDERSDOC
do
	echo "##==> remove old '$f' documentation at target"
	cd ~/$DST/documentation
	rm -rf ./$f
	echo "##==> build new '$f' documentation at target"
	#mkdir ~/$DST/documentation/$f
	cd ~/$DST/$f
	doxygen $f.doxyfile	
done 


###################### ARCHIVE DST FOLDER #########################
TIMESTAMP=$(date +"%Y%m%d%H%M%S")
echo "##==> Archiving driver/library/applications"
tar -zcvf ~/share/aes-$TIMESTAMP.tar.gz ~/$DST




